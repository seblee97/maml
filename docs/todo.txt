Todos
- plotting of priority queue scaling to parameters
- make dev and exp branch

Thoughts
- if sampling more from higher loss regions of the parameter space leads to a generally less effective meta prior, 
  in that it pushes the meta parameter to a point where it no longer initialises well for the bulk of the 'easier' tasks in the distributions, 
  how do you ensure that there are no systematic tails in the performance of the meta parameter?
- Links to fairness
- Does current loss metric accurately captures varying success of meta params for tasks in distribution

Done
- model checkpointing doesn't seem to work (fixed maybe - test)
- random seeds
- plot/log variance of meta validation loss
- figure out how to structure repos (folder for experiment scripts, folder for model scripts etc.)
- compute correlation between how often a parameter range has been picked and the loss in that grid
- Make repos a package - with setup for dev
- Change paths to be consistent with the new package structure
- pdf of losses (to see range/ skew etc)
- plot sum of priority queues (ensure documentation of clear distinction between this and rthe meta validation loss being computed)
- change correlation plot to spearmans or something more interpretable between -1 and 1
- add interpolate etc. methods for priority queue query 
